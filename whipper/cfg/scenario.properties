# connection property to be used while creating connection
# in this case we define two properties JDBC_PROP_1 and JDBC_PROP_2
whipper.connection.property.user=teiidUser
whipper.connection.property.password=redhat1!
# time in milliseconds
whipper.scenario.time.for.one.query=1000
# ping query
whipper.scenario.ping.query=SELECT * FROM service
# property 'url' in example_properties_file.properties has one placeholder ${vdb.name}
# we define property of same name here so placeholder can be safely replaced
vdb.name=sample
# query set directory (relative to 'queryset.artifacts.dir')
queryset.dirname=query_set
# expected results (relative to 'queryset.dirname')
expected.results.dirname=expected_results
# test queries (relative to 'queryset.dirname')
test.queries.dirname=test_queries
# query which will be used to validate connection
# (if connection is not closed and method Connection.isValid(int) returns true)
# default to SELECT 1
whipper.scenario.valid.connection.sql=SELECT 1
# query which will be executed after scenario
whipper.scenario.after.query=SELECT 1
# whether to fail query set after first failed query of query set
whipper.scenario.fastfail=true