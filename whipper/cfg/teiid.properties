###########################################
# A sample properties file which can be passed to Whipper tool.
# All the properties from this file will be combined with properties passed to method
# Whipper.runTest(File, Properties) and with properties from scenario file (see example_scenario_file.properties file).
# Priority of the properties is:
# 1. scenario file
# 2. properties passed to method Whipper.runTest(File, Properties) (if any)
# 3. properties from this file
###########################################

# connection strategy - specify connection strategy which will provide connections to scenario
# connection strategy is a class which implements org.whipper.connection.ConnectionFactory
# if you want to use custom connection strategy, set this property to value which is returned by
#           ConnectionFactory.getName() method of custom implementation (ignore case)
#           also create file /META-INF/services/org.whipper.connection.ConnectionFactory with fully qualified name of custom implementation
# default is DRIVER - will use driver
whipper.connection.strategy=DRIVER
# URL to be used by driver to create a new connection
# note that property 'url' contains placeholders ${...}
# those placeholder will be resolved (even nested placeholders of any depth)
url=jdbc:teiid:sample@mms://jdbc-datavirt-app-jdvocp.127.0.0.1.nip.io:443
# first placeholder for 'url'
# it contains another placeholder
host=jdbc-datavirt-app-jdvocp.127.0.0.1.nip.io
port=443
machine.id=machine1
# fully qualified name of the JDBC driver class
jdbc.driver=org.teiid.jdbc.TeiidDriver
# path to file which contains scenario-specific properties
# if path denotes directory, then all files from directory will be treated as scenarios
# Whipper will accept only files which name ends with '.properties' and name of the file without extension matches regular expression
#           passed in 'whipper.scenario.include' and does not match 'whipper.scenario.exclude'
scenario.file=cfg/scenario.properties
# regular expression for scenarios which should be included (without extension '.properties')
# if not defined, all scenarios will be included
whipper.scenario.include=scenario[0-9]+
# regular expression for scenarios which should be excluded (without extension '.properties')
# if not defined, no scenarios will be excluded
whipper.scenario.exclude=scenario10
# path to query set - directory which contains expected results and test queries
queryset.artifacts.dir=artifacts
# output directory
output.dir=output
# name of the result mode which should process returned results
# result mode is a class which implements org.whipper.resultmode.ResultMode
# if you want to use custom result mode, set this property to value which is returned by
#           ResultMode.getName() method of custom implementation (ignore case)
#           also create file /META-INF/services/org.whipper.resultmode.ResultMode with fully qualified name of custom implementation
# build-in modes are COMPARE, GENERATE, NONE
# default is NONE - do nothing with the result
result.mode=COMPARE
# allowed divergence which will be used in comparison of BigDecimal, double and float numbers
# default to 0
allowed.divergence=0.000005
